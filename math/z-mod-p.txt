We're considering the finite field Z mod p.

## Cancelation, Permutations, Inverses

First, we have:

    a != 0, b != 0 => ab != 0

Because the modulus `p` cannot factor into `ab` of course.

This implies also cancelation:

    ab = ac => b = c OR a = 0

That's because otherwise:

    a (b - c) = 0

Thus we also know:

    1a, 2a, 3a, ...

is a permutation of

    1, 2, 3, ...

Indeed, the fact that multiplication by `a` gives a permutation of `1,
... ,p-1` implies that `a` has an inverse.

## Every element is a root

Consider powers of a:

    a**1, a**2, a**3, ...

We know that this never becomes zero. So it must enter a
cycle. Question: does this ever return to a? Equivalent; does this
ever become 1? Equivalent: is `a` a root of 1 in this field? (Also
equivalent: is the inverse of a also a positive power of a?).

Imagine that we have the scenario:

    a, a**2, ..., b=a**k, ba, ba**2, ... b a**j = b

Then by cancellation we know that a**j=1.

## Orders within a cycle of powers

We say that `a` has order `k` if:

    a**k = 1 and a**j != 1 for any j < k

Note: if `a**m = 1`, this implies that `m` is a multiple of `k`.

Let us say that b = a**i. Then what is the order of `b`?

If `i` divides `k`, then it should be clear that the order of `b` is
`k/i`.

Let us say that `b` has order `j`. Then `b**j = 1` implies that `a**ij
= 1`. We *must* have that `ij` is a multiple of `k`. In fact, the
easiest way for this to be true is if `j = k / gcd(k, i)`. Basically,
`gcd(k, i)` includes all prime factors common to `k` and `i`. So `k /
gcd(k, i)` includes all prime factors of `k` not already found in
`i`. So we must have that `i * (k / gcd(k, i))` is the smallest number
such that (1) this is divisible by `i` and (2) this is divisible by
`k`.

Thus we see that the order of any element `a**i` must be a divisor of
the order of `a`.

## Orders of inverses

The order of `a` must be equal to the order of `a**-1`. Think. If
`a**-1` has order `k`, then we know:

     a**k a**-k = 1
     a**k 1 = 1
     a**k = 1

From before, we know this must imply:

    gcd(k, k-1) = 1

Is that true? Well, note:

    gcd(k, k - i) = gcd(i, k)

This is for the same reason why Euclid's algorithm works. Which
naturally implies:

    gcd(k, k - 1) = gcd(1, k) = 1

So this is a good intuition check!

A few interesting notes:

1. An inverse of `a` is always generated by repeated multiplication by
   a.
2. Repeated multiplication by `a**-1` yields the reverse of the
   permutation generated by repeated multiplication by `a`.

## Coprime orders multiply

If `a` has order `k`, and `b` has order `j`, then

    if k, j are coprime, then ab has order kj

It should be clear that:

    (ab)**(kj)=1

But why can't (ab)**m = 1 for some `m < kj`? In that case, consider:

    Since m is not a multiple of both k and j, then at least one of
    a**m or b**m must not be one. Let us assume a**m != 1.

    Then additionally, we must have b**m != 1, as `(a**m) * 1 != 1`.

    So our question is: can it ever be that a**m is the inverse of
    b**m?

The answer is no. `a**m` cannot have the same order as `b**m`. For
`a**m` must have an order that divides `k` and `b**m` must have an
order that divides `j`. And since `k, j` is coprime, no number divides
both `k` and `j` except 1. So `a**m` and `b**m` only have the same
order if both are of order 1, which means `a**m = 1 == b**m` which
only happens when `m = kj`.

Another way to put it:

    Every inverse of a**i is in the chain generated by a.

    Consider a chain of b**i. Assume it does not intersect the chain
    of a**i.

    Then no inverse of a**i is in the chain of b**i.

    Therefore, (ab)**i = 1 only when a**i = 1 = b**i.

    If a and b have coprime orders, then their chains must be
    non-intersecting.

**Goal**: Prove that there is a primitive root!

## Chain of ab of coprime order contains chains of a and b

We know that if a and b have coprime order, then `ab` has order `k_a
k_b`. But what elements does `ab` contain? I claim it contains all:

    a**i b**j

To show this, I must show that the chain contains `a` and `b`. It's
easy to see that:

    (ab) ** k_a = b**k_a

Now, we know that b**k_a generates a subchain of b. I claim that it
generates exactly the chain of `b`. This is because `k_a` is coprime
to `k_b`. We already showed before that the length of the subchain of
b**k_a is:

     k_b / gcd(k_a, k_b)

And coprime means gcd(k_a, k_b) = 1. Which means the length of the
subchain generated by b**k_a is still k_b. So the chains contain the
same elements. In particular, `b` is contained in both.

The same argument works for a. So `a` and `b` are both in the chain
generated by `ab`.

## `k`th roots of unity imply number of `k`th roots of any `a`

A number `a` may have *no* `k`th roots. But let us say that it has
some. I want to show that the number of kth roots of `a` must equal
the number of kth roots of unity.

It is clear that if `x` is a kth root of `a`, then for any `kth` root
of unity `u`, `xu` is also a kth root, as:

    (xu)**k = x**k u**k = a 1 = a

Likewise, I will show that every `k`th root `x` implies the existence
of some `k`th root of unity `u`. Consider roots `x_1, ... x_n`. Then
note:

    (x_1)**k = (x_n)**k

Now we know that `x_n = b x_1` for some `b`. So consider this:

    (x_1)**k = (b x_1)**k
    (x_1)**k = b**k (x_1)**k
    1 = b**k

So `b` is a root of unity.

This shows that if `n` roots of `k` exist, then `n-1` roots of unity
also exist. But of course, we didn't consider `1` as its own root. We
didn't already count this as `b != 1` (else `x_1 = x_n`, which
violates assumption they are all distinct).

The first part shows that the number of kth roots of `a` is at least
the number of roots of unity, while the second part shows that the
number of roots of unity is at least as many as the number of roots of
`a`.
